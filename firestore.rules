
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user has the 'admin' role.
    function isAdmin() {
      // It's safe to read the user's own document to check their role.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow a user to create their own document upon signing up.
      allow create: if request.auth.uid == userId;
      
      // Allow a user to read their own document, or allow an admin to read any user document.
      allow read: if request.auth.uid == userId || isAdmin();
      
      // Allow a user to update their own document, or allow an admin to update any user document.
      allow update: if request.auth.uid == userId || isAdmin();
      
      // Only admins can delete users.
      allow delete: if isAdmin();
    }

    // Rules for the 'events' collection
    match /events/{eventId} {
      // Allow anyone (even unauthenticated users) to read event data.
      allow read: if true;
      
      // Only allow users with the 'admin' role to create, update, or delete events.
      allow write: if isAdmin();
    }

    // Rules for the 'blogPosts' collection
    match /blogPosts/{blogPostId} {
      // Allow anyone to read blog posts.
      allow read: if true;

      // Only allow admins to create, update, or delete blog posts.
      allow write: if isAdmin();
    }
    
    // Rules for the 'newsletters' collection
    match /newsletters/{newsletterId} {
        // Only allow admins to create, read, update or delete newsletters
        allow read, write: if isAdmin();
    }
  }
}
