rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAuthenticated() {
      return request.auth != null;
    }
    
    function isUserAdmin(uid) {
        return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      
      allow read: if request.auth.uid == userId || isUserAdmin(request.auth.uid);
      
      // A user can update their own profile. For testing, they can also change their own role.
      allow update: if request.auth.uid == userId || isUserAdmin(request.auth.uid);
      
      allow delete: if isUserAdmin(request.auth.uid);
    }

    match /blogPosts/{postId} {
      allow read: if true;
      allow write: if isUserAdmin(request.auth.uid);
    }

    match /events/{eventId} {
      allow read: if true;
      allow write: if isUserAdmin(request.auth.uid);
    }

    match /newsletters/{newsletterId} {
        allow read, write: if isUserAdmin(request.auth.uid);
    }
  }
}
